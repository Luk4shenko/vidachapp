<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Возврат оборудования</title>
    <link rel="stylesheet" href="/css/styles.css">
    <style>
        /* Стили для сообщения об отсутствии заявок */
        #no-issues-message {
            display: none; /* Скрыть по умолчанию */
        }

        /* Стили для таблицы */
        .return-panel {
            display: none; /* Скрыть по умолчанию */
        }

        body {
            background-color: #e9f0f7;
            font-family: 'Inter', sans-serif;
            margin: 0;
            padding: 0;
            color: #495057;
            overflow-x: hidden;
            height: 100vh; /* Используем всю высоту экрана */
        }

        .container {
            display: flex;
            flex-direction: column;
            width: 95%;
            height: 95vh; /* Высота контейнера */
            padding: 20px;
            background-color: #ffffff;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            overflow: hidden;
        }

        .horizontal-container {
            width: 95%;
            display: flex;
            align-items: center; /* Выравнивание по центру вертикально */
            gap: 20px; /* Расстояние между элементами */
            margin-bottom: 20px;
        }

    </style>
</head>
<body>
    <div class="container">
        <h1>Возврат оборудования</h1>

        <div class="horizontal-container">
            <div class="button-container" style="margin-bottom: 20px;">
                <button type="button" onclick="window.location.href='/'">Назад</button>
            </div>
            <!-- Поисковая форма -->
            <form class="search-form" style="width: 95%;">
                <div class="form-group position-relative">
                    <label for="searchTerm">Поиск:</label>
                    <input type="text" id="searchTerm" class="form-control" placeholder="Введите ФИО" autocomplete="off" list="suggestionsList">
                    <datalist id="suggestionsList"></datalist>
                </div>
            </form>
        </div>

        <!-- Сообщение об отсутствии заявок -->
        <h2 id="no-issues-message">Активных заявок нет</h2>

        <!-- Таблица с журналами пользователя -->
        <div class="return-panel">
            <div class="table-container">
                <table id="issuesTable" class="table">
                    <thead>
                        <tr>
                            <th>Тип оборудования</th>
                            <th>Номер заявки</th>
                            <th>Выдан</th>
                            <th>Дата выдачи</th>
                            <th>Доп. информация</th>
                            <th>Действие</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- Данные будут добавлены динамически через JavaScript -->
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <script>
        let debounceTimer;

        document.getElementById('searchTerm').addEventListener('input', function() {
            const query = this.value.trim();
            if (debounceTimer) {
                clearTimeout(debounceTimer);
            }
            debounceTimer = setTimeout(() => {
                if (query.length >= 3) {
                    searchEmployeeForReturn(query);
                } else {
                    document.getElementById('suggestionsList').innerHTML = '';
                    document.querySelector('.return-panel').style.display = 'none';
                    document.getElementById('no-issues-message').style.display = 'none';
                }
            }, 300); // Задержка в 300 миллисекунд
        });

        async function searchEmployeeForReturn(query) {
            try {
                const response = await fetch(`https://nn-app-020.stada.ru/StadaIdentityService/api/employee/s?search=${encodeURIComponent(query)}`);
                if (!response.ok) {
                    throw new Error(`Ошибка сети: ${response.status}`);
                }

                const data = await response.json();
                console.log('Полученные данные:', data);

                if (!Array.isArray(data)) {
                    console.error('Ожидался массив, но получены данные:', data);
                    return;
                }

                const results = data.map(employee => employee.fullName || 'Не указано');
                updateSuggestions(results);
            } catch (error) {
                console.error('Ошибка при поиске сотрудников:', error);
            }
        }

        function updateSuggestions(suggestions) {
            const datalist = document.getElementById('suggestionsList');
            datalist.innerHTML = '';

            suggestions.forEach(suggestion => {
                const option = document.createElement('option');
                option.value = suggestion;
                datalist.appendChild(option);
            });
        }

        document.getElementById('searchTerm').addEventListener('change', function() {
            const selectedValue = this.value;
            loadUserIssues(selectedValue);
        });

        async function loadUserIssues(userFullName) {
            try {
                const response = await fetch(`/get-user-issues?userFullName=${encodeURIComponent(userFullName)}`);
                if (!response.ok) {
                    throw new Error('Ошибка сети');
                }
                const issues = await response.json();
                console.log('Полученные заявки:', issues);

                const tableBody = document.getElementById('issuesTable').querySelector('tbody');
                tableBody.innerHTML = '';

                if (Array.isArray(issues) && issues.length === 0) {
                    document.querySelector('.return-panel').style.display = 'none';
                    document.getElementById('no-issues-message').style.display = 'block';
                } else if (Array.isArray(issues)) {
                    document.querySelector('.return-panel').style.display = 'block';
                    document.getElementById('no-issues-message').style.display = 'none';

                    issues.forEach(issue => {
                        const row = document.createElement('tr');
                        row.innerHTML = `
                            <td>${issue.journalType || 'Не указано'}</td>
                            <td>${issue.journalNumber || 'Не указано'}</td>
                            <td>${issue.issuedBy || 'Не указано'}</td>
                            <td>${issue.issueDate || 'Не указана'}</td>
                            <td>${issue.additionalInfo || 'Нет данных'}</td>
                            <td>
                                <button class="btn btn-primary return-btn" onclick="confirmReturn(${issue.id})">Вернуть</button>
                            </td>
                        `;
                        tableBody.appendChild(row);
                    });
                } else {
                    console.error('Ожидался массив, но получены данные:', issues);
                    document.querySelector('.return-panel').style.display = 'none';
                    document.getElementById('no-issues-message').style.display = 'block';
                }
            } catch (error) {
                console.error('Ошибка при загрузке заявок пользователя:', error);
                document.querySelector('.return-panel').style.display = 'none';
                document.getElementById('no-issues-message').style.display = 'block';
            }
        }

        function confirmReturn(issueId) {
            fetch('/confirm-return', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ issueId: issueId })
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Ошибка сети');
                }
                window.location.href = '/';
            })
            .catch(error => console.error('Ошибка при подтверждении возврата:', error));
        }
    </script>
</body>
</html>
